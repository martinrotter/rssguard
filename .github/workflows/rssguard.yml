---
name: rssguard

on:
  push:
    branches: ["*"]
    tags: ["*"]

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  check-build-script:
    name: check-build-script
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Check script syntax
        run: bash -n ./resources/scripts/github-actions/build-linux-mac.sh

      - name: Show shellcheck version
        run: shellcheck --version

      - name: Run shellcheck
        run: shellcheck --color=always ./resources/scripts/github-actions/build-linux-mac.sh

  build-rssguard:
    needs: check-build-script
    name: "${{ matrix.os }}; qt5 = ${{ matrix.use_qt5 }}"
    runs-on: "${{ matrix.os }}"
    container: "${{ matrix.cont }}"
    strategy:
      matrix:
        os: [windows-2022, ubuntu-24.04, macos-13]
        use_qt5: ["ON", "OFF"]
        cont: [""]
        include:
          - os: windows-2022
            script_name: .\resources\scripts\github-actions\build-windows.ps1
          - os: ubuntu-24.04
            script_name: ./resources/scripts/github-actions/build-linux-mac.sh
            cont: ghcr.io/pkgforge-dev/archlinux:latest
          - os: macos-13
            script_name: ./resources/scripts/github-actions/build-linux-mac.sh
        exclude:
          - os: ubuntu-24.04
            use_qt5: "ON"
          - os: macos-13
            use_qt5: "ON"
    steps:         
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
         
      - name: Prepare environment and compile application
        run: ${{ matrix.script_name }} "${{ matrix.os }}" "${{ matrix.use_qt5 }}"
        env:
          FEEDLY_CLIENT_ID: ${{ secrets.FEEDLY_CLIENT_ID }}
          FEEDLY_CLIENT_SECRET: ${{ secrets.FEEDLY_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: RSS_Guard-${{ runner.os }}-Qt${{ matrix.use_qt5 == 'ON' && '5' || '6' }}
          path: |
            ./rssguard-build/rssguard-*win*.exe
            ./rssguard-build/rssguard-*win*.7z
            ./rssguard-build/rssguard-*mac64.dmg
            ./rssguard-build/rssguard-*linux64.AppImage

  dist-binaries:
    name: distribute-binaries
    needs:
      - build-rssguard
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Download binaries from previous jobs
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Release development binaries
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: artifacts/*/*
          name: Development builds (5.x line)
          omitBodyDuringUpdate: true
          prerelease: true
          removeArtifacts: true
          tag: devbuild5

      - name: Update "devbuild5" tag
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: richardsimko/update-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: devbuild5

      - name: Release stable binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifactErrorsFailBuild: true
          artifacts: artifacts/*/*
          draft: true
